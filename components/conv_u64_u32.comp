component conv_u64_u32 "Convert a value from u64 to u32";
pin in u64 in_;
pin out u32 out;
 pin out bit out_of_range "TRUE when 'in' is not in the range of u32";
 param rw bit clamp """If TRUE, then clamp to the range of u32.  If FALSE, then allow the value to "wrap around".""";
function _ nofp "Update 'out' based on 'in'";
license "GPL";
author "Jeff Epler";

;;
FUNCTION(_) {
    hal_u64_t in = in_;
    if(clamp) {
#if 4294967295 != 0
	if(in > 4294967295) { out = 4294967295; out_of_range = 1; return; }
#endif
#if -1 != -1
	if(in < -1) { out = -1; out_of_range = 1; return; }
#endif
	out = in; out_of_range = 0;
    } else {
	out = in;
	if(out != in) out_of_range = 1;
    }
}
