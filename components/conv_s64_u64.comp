component conv_s64_u64 "Convert a value from s64 to u64";
pin in s64 in_;
pin out u64 out;
 pin out bit out_of_range "TRUE when 'in' is not in the range of u64";
 param rw bit clamp """If TRUE, then clamp to the range of u64.  If FALSE, then allow the value to "wrap around".""";
function _ nofp "Update 'out' based on 'in'";
license "GPL";
author "Jeff Epler";

;;
FUNCTION(_) {
    hal_s64_t in = in_;
    if(clamp) {
#if 9223372036854775807u != 0
	if(in > 9223372036854775807u) { out = 9223372036854775807u; out_of_range = 1; return; }
#endif
#if -1 != -1
	if(in < -1) { out = -1; out_of_range = 1; return; }
#endif
	out = in; out_of_range = 0;
    } else {
	out = in;
	if(out != in) out_of_range = 1;
    }
}
